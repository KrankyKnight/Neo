'use strict'

let Container = require('./container')
let list = require('./list')

class Rule extends Container {
  constructor(defaults) {
    super(defaults)
    this.type = 'rule'
    if (!this.nodes) this.nodes = []
  }

  get selectors() {
    return list.comma(this.selector)
  }

  set selectors(values) {
    let match = this.selector ? this.selector.match(/,\s*/) : null
    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')
    this.selector = values.join(sep)
  }
}

module.exports = Rule
Rule.default = Rule

Container.registerRule(Rule)
efineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

// Generated by CoffeeScript 2.5.1
var DeclarationBlock, Rule, Selector;
Selector = require('./rule/Selector');
DeclarationBlock = require('./rule/DeclarationBlock');

module.exports = Rule = /*#__PURE__*/function () {
  function Rule(selector) {
    _classCallCheck(this, Rule);

    this.selector = new Selector(selector);
    this.styles = new DeclarationBlock();
  }

  _createClass(Rule, [{
    key: "setStyles",
    value: function setStyles(styles) {
      this.styles.set(styles);
      return this;
    }
  }]);

  return Rule;
}();